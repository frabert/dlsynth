trigger:
  branches:
    include:
    - '*'
    - refs/tags/*
    exclude:
    - gh-pages
jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    BUILD_SHARED: OFF
  strategy:
    matrix:
      debug:
        BUILD_CONFIG: Debug
        SIMD_VALUE: OFF
      release:
        BUILD_CONFIG: Debug
        SIMD_VALUE: OFF
      sse-debug:
        BUILD_CONFIG: Debug
        SIMD_VALUE: SSE3
      sse-release:
        BUILD_CONFIG: Release
        SIMD_VALUE: SSE3
  steps:
  - script: |
      sudo add-apt-repository ppa:libdmusic/unstable
      sudo apt-get update
      sudo apt-get install libriffcpp-dev
    displayName: Resolve dependencies
  - script: |
      mkdir build
      cd build
      cmake -DCMAKE_BUILD_TYPE=$(BUILD_CONFIG) -DBUILD_SHARED_LIBS=$(BUILD_SHARED) -DDLSYNTH_ENABLE_SIMD=$(SIMD_VALUE) ..
      cmake --build .
    displayName: Build
- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  variables:
    VCPKG_ROOT: $(Build.SourcesDirectory)\vcpkg
    VCPKG_PACKAGES: riffcpp
  strategy:
    matrix:
      x64-static-debug:
        CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
        VCPKG_TRIPLET: x64-windows-static
        BUILD_SHARED: OFF
        BUILD_CONFIG: Debug
        SIMD_VALUE: OFF
      x64-static-release:
        CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
        VCPKG_TRIPLET: x64-windows-static
        BUILD_SHARED: OFF
        BUILD_CONFIG: Release
        SIMD_VALUE: OFF
      x64-shared-debug:
        CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
        VCPKG_TRIPLET: x64-windows
        BUILD_SHARED: ON
        BUILD_CONFIG: Debug
        SIMD_VALUE: OFF
      x64-shared-release:
        CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
        VCPKG_TRIPLET: x64-windows
        BUILD_SHARED: ON
        BUILD_CONFIG: Release
        SIMD_VALUE: OFF
      x86-static-debug:
        CMAKE_GENERATOR: "Visual Studio 15 2017"
        VCPKG_TRIPLET: x86-windows-static
        BUILD_SHARED: OFF
        BUILD_CONFIG: Debug
        SIMD_VALUE: OFF
      x86-static-release:
        CMAKE_GENERATOR: "Visual Studio 15 2017"
        VCPKG_TRIPLET: x86-windows-static
        BUILD_SHARED: OFF
        BUILD_CONFIG: Release
        SIMD_VALUE: OFF
      x86-shared-debug:
        CMAKE_GENERATOR: "Visual Studio 15 2017"
        VCPKG_TRIPLET: x86-windows
        BUILD_SHARED: ON
        BUILD_CONFIG: Debug
        SIMD_VALUE: OFF
      x86-shared-release:
        CMAKE_GENERATOR: "Visual Studio 15 2017"
        VCPKG_TRIPLET: x86-windows
        BUILD_SHARED: ON
        BUILD_CONFIG: Release
        SIMD_VALUE: OFF
      x64-shared-debug-sse:
        CMAKE_GENERATOR: "Visual Studio 15 2017"
        VCPKG_TRIPLET: x86-windows
        BUILD_SHARED: ON
        BUILD_CONFIG: Debug
        SIMD_VALUE: SSE3
      x64-shared-release-sse:
        CMAKE_GENERATOR: "Visual Studio 15 2017"
        VCPKG_TRIPLET: x86-windows
        BUILD_SHARED: ON
        BUILD_CONFIG: Release
        SIMD_VALUE: SSE3
  steps:
  - script: |
      git clone --depth=1 https://github.com/Microsoft/vcpkg $(VCPKG_ROOT)
      call $(VCPKG_ROOT)\bootstrap-vcpkg.bat
      $(VCPKG_ROOT)\vcpkg.exe install --triplet $(VCPKG_TRIPLET) $(VCPKG_PACKAGES)
    displayName: Set-up vcpkg
  - script: |
      mkdir build
      cd build
      cmake -G "$(CMAKE_GENERATOR)" -DBUILD_SHARED_LIBS=$(BUILD_SHARED) -DVCPKG_TARGET_TRIPLET=$(VCPKG_TRIPLET) -DCMAKE_TOOLCHAIN_FILE=$(VCPKG_ROOT)\scripts\buildsystems\vcpkg.cmake -DDLSYNTH_ENABLE_SIMD=$(SIMD_VALUE) ..
      cmake --build . --config $(BUILD_CONFIG)
    displayName: Build
- job: MakeDebs
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      sudo add-apt-repository ppa:libdmusic/unstable
      sudo apt-get update
      sudo apt-get install libriffcpp-dev
    displayName: Resolve dependencies
  - script: |
      mkdir build
      cd build
      cmake .. -DBUILD_SHARED_LIBS=ON
      cpack -G DEB
      mkdir artifacts
      mv *.deb artifacts/
    displayName: Build
  - publish: $(System.DefaultWorkingDirectory)/build/artifacts/
    displayName: Publish artifacts
- job: MakeDocs
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: sudo apt-get install doxygen graphviz
    displayName: Install Doxygen
  - script: doxygen
    displayName: Generate documentation
  - script: |
      mkdir artifacts
      tar -czvf artifacts/docs.tar.gz docs
    displayName: Create tarball
  - publish: $(System.DefaultWorkingDirectory)/artifacts/
    displayName: Publish artifacts