#ifndef WSMP_HPP
#define WSMP_HPP
/*
================= DO NOT EDIT THIS FILE ====================
This file has  been automatically generated by genstructs.py

Please  edit  structs.xml instead, and  re-run genstructs.py
============================================================
*/
#include "StructLoader.hpp"
#include "wsmp_loop.hpp"
struct wsmp {
  std::uint32_t cbSize;
  std::uint16_t usUnityNote;
  std::int16_t sFineTune;
  std::int32_t lGain;
  std::uint32_t fulOptions;
  std::uint32_t cSampleLoops;
  std::vector<wsmp_loop> loops;
};

template <> struct StructLoader<wsmp> {
  static const char* readBuffer(const char *begin, const char *end, wsmp &output) {
    if (begin > end) {
      throw DLSynth::Error("Wrong data size", DLSynth::ErrorCode::INVALID_FILE);
    }
    const char *cur_pos = begin;
    cur_pos = StructLoader<std::uint32_t>::readBuffer(cur_pos, end, output.cbSize);
    cur_pos = StructLoader<std::uint16_t>::readBuffer(cur_pos, end, output.usUnityNote);
    cur_pos = StructLoader<std::int16_t>::readBuffer(cur_pos, end, output.sFineTune);
    cur_pos = StructLoader<std::int32_t>::readBuffer(cur_pos, end, output.lGain);
    cur_pos = StructLoader<std::uint32_t>::readBuffer(cur_pos, end, output.fulOptions);
    cur_pos = StructLoader<std::uint32_t>::readBuffer(cur_pos, end, output.cSampleLoops);
    cur_pos = begin + output.cbSize;
    output.loops.resize(output.cSampleLoops);
    cur_pos = readArray<wsmp_loop>(cur_pos, end, output.cSampleLoops, output.loops);
    return cur_pos;
  }
};
#endif
