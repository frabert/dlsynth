#ifndef RANGE_HPP
#define RANGE_HPP
/*
================= DO NOT EDIT THIS FILE ====================
This file has  been automatically generated by genstructs.py

Please  edit  structs.xml instead, and  re-run genstructs.py
============================================================
*/
#include "StructLoader.hpp"
struct Range {
  std::uint16_t low;
  std::uint16_t high;


constexpr bool inRange(std::uint16_t value) const noexcept {
  return (value <= high && value >= low) || (low == 0 && high == 0);
}

    };

template <> struct StructLoader<Range> {
  static const char* readBuffer(const char *begin, const char *end, Range &output) {
    if (begin > end) {
      throw DLSynth::Error("Wrong data size", DLSynth::ErrorCode::INVALID_FILE);
    }
    const char *cur_pos = begin;
    cur_pos = StructLoader<std::uint16_t>::readBuffer(cur_pos, end, output.low);
    cur_pos = StructLoader<std::uint16_t>::readBuffer(cur_pos, end, output.high);
    return cur_pos;
  }
};
#endif
