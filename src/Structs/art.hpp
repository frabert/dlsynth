#ifndef ART_HPP
#define ART_HPP
/*
================= DO NOT EDIT THIS FILE ====================
This file has  been automatically generated by genstructs.py

Please  edit  structs.xml instead, and  re-run genstructs.py
============================================================
*/
#include "StructLoader.hpp"
#include "cblock.hpp"
struct art {
  std::uint32_t cbSize;
  std::uint32_t cConnectionBlocks;
  std::vector<cblock> blocks;
};

template <> struct StructLoader<art> {
  static const char* readBuffer(const char *begin, const char *end, art &output) {
    if (begin > end) {
      throw DLSynth::Error("Wrong data size", DLSynth::ErrorCode::INVALID_FILE);
    }
    const char *cur_pos = begin;
    cur_pos = StructLoader<std::uint32_t>::readBuffer(cur_pos, end, output.cbSize);
    cur_pos = StructLoader<std::uint32_t>::readBuffer(cur_pos, end, output.cConnectionBlocks);
    cur_pos = begin + output.cbSize;
    output.blocks.resize(output.cConnectionBlocks);
    cur_pos = readArray<cblock>(cur_pos, end, output.cConnectionBlocks, output.blocks);
    return cur_pos;
  }
};
#endif
